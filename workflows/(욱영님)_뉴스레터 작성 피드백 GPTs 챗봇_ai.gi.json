{"createdAt":"2024-12-03T08:16:15.766Z","updatedAt":"2024-12-16T05:44:58.000Z","id":"reXksewmXQy1lc8p","name":"(욱영님)_뉴스레터 작성 피드백 GPTs 챗봇_ai.gi","active":false,"nodes":[{"parameters":{"resource":"chat","chatModel":"gpt-4o-mini","prompt":{"messages":[{"role":"system","content":"당신은 콘텐츠에 흥미로운 부분을 찾는 AI Assistant 입니다. 답변은 유익하고 논리적이어야 합니다. 다음 콘텐츠를 주의 깊게 읽고, 그 중 가장 흥미롭고 중요한 부분 하나를 찾아주세요."},{"content":"=지침에 따라 콘텐츠에 흥미로운 부분을 찾아주세요.  콘텐츠\"\"\"{{ $json.data.post.fields[0].value }}{{ $json.data.post.fields[1].value }}\"\"\""}]},"options":{},"requestOptions":{}},"name":"Find Interesting Part","type":"n8n-nodes-base.openAi","position":[1060,460],"id":"8af1f7af-221f-48f7-b3d9-9c338823d7a4","credentials":{"openAiApi":{"id":"5ia0q77KiqTwi2aM","name":"OpenAi account"}}},{"parameters":{"resource":"chat","chatModel":"gpt-4o","prompt":{"messages":[{"role":"system","content":"=당신은 AI 콘텐츠 어시스턴트입니다. 답변은 유익하고 논리적이어야 합니다. 단계별로 생각하고, 아래의 콘텐츠 기준을 참고하여 콘텐츠를 다시 작성해 주세요. 기존 콘텐츠의 형식을 유지하세요.  콘텐츠 기준: - 글은 독자가 공감할 수 있는 고통스러운 부분을 제시하며 시작해야 합니다. 이는 독자의 공감을 높이고 글의 몰입도를 향상시킵니다. - 사람들이 해결하고자 하는 문제를 Job To Be Done 관점에서 명확하게 작성해야 합니다. - 추상적인 단어를 사용하지 마세요. - 예시를 드는 것은 이해 부족으로 인한 추상화일 수 있습니다. - 오해의 소지가 있는 부분을 제거하고, 모호한 표현을 피하세요. - 독자에게 행동을 강요하지 마세요. - 글의 길이를 최대한 줄이고, 중복되는 내용을 없애세요. - 용어를 일관되게 사용하세요. - 새로운 개념이나 내용은 맥락에 맞게 도입하세요.  콘텐츠 원문\"\"\"{{ $('getPost').item.json.data.post.fields[0].value }}{{ $('getPost').item.json.data.post.fields[1].value }}\"\"\"  흥미로운 부분\"\"\"{{ $json.message.content }}\"\"\""},{"content":"=지침에 따라 콘텐츠를 다시 작성해 주세요  콘텐츠\"\"\"{{ $('Webhook').item.json.content }}\"\"\""}]},"options":{"temperature":1},"requestOptions":{}},"name":"Generate Feedback","type":"n8n-nodes-base.openAi","position":[1260,460],"id":"05690f60-b5bd-41fa-ab31-51d4b0146d28","credentials":{"openAiApi":{"id":"5ia0q77KiqTwi2aM","name":"OpenAi account"}}},{"parameters":{"path":"newsletter-feedback","options":{}},"name":"Webhook","type":"n8n-nodes-base.webhook","position":[460,460],"id":"2c789ad2-5def-43e9-b506-2ef32c4895f9"},{"parameters":{"endpoint":"={{ $vars.bettermode_end_point}}","requestFormat":"json","query":"query GetPost($postId: ID!) {\n  post(id: $postId) {\n    id\n    fields {\n      key\n      value\n    }\n  }\n}\n","variables":"={\n\"postId\" : {{ JSON.stringify($json.postId) }}\n}","headerParametersUi":{"parameter":[{"name":"={{ $vars.bettermode_client_id_key }}","value":"={{ $vars.bettermode_client_id_value }}"},{"name":"={{ $vars.bettermode_client_secret_key }}","value":"={{ $vars.bettermode_client_secret_value }}"}]}},"id":"3b14f20e-b8f9-4059-9b2e-9629382c63cc","name":"getPost","type":"n8n-nodes-base.graphql","typeVersion":1,"position":[860,460],"notes":"만든 배열을 가지고 게시판에 멤버들을 일괄 초대한다."},{"parameters":{"jsCode":"// URL 문자열에서 마지막 세그먼트를 추출하는 함수\nfunction getLastSegmentFromURL(urlString) {\n    // URL에서 pathname 부분 추출 (정규식 사용)\n    const pathMatch = urlString.match(/^(?:https?:\\/\\/[^\\/]+)?([^?#]+)/);\n    const path = pathMatch ? pathMatch[1] : '';\n    \n    // path를 '/'로 분할\n    const segments = path.split('/').filter(segment => segment.length > 0);\n    \n    // 맨 마지막 요소를 선택하고, 그것을 '-'로 분할\n    const lastSegment = segments[segments.length - 1].split('-');\n    \n    // 마지막 문자열을 반환\n    return lastSegment[lastSegment.length - 1];\n}\n\n// Webhook에서 받은 URL로 함수 실행\nconst postId = getLastSegmentFromURL($input.first().json.url);\nreturn { postId };"},"id":"77b861d3-35ef-401a-9d7f-3cb475d46300","name":"getPostId","type":"n8n-nodes-base.code","typeVersion":2,"position":[660,460]},{"parameters":{"respondWith":"json","responseBody":"={\n  \"aiFeedback\": {{ JSON.stringify($json.message.content) }}\n} ","options":{}},"id":"4f1b214b-93cf-4791-bf99-ff1a4711309b","name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1460,460]}],"connections":{"Find Interesting Part":{"main":[[{"node":"Generate Feedback","type":"main","index":0}]]},"Generate Feedback":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"getPostId","type":"main","index":0}]]},"getPost":{"main":[[{"node":"Find Interesting Part","type":"main","index":0}]]},"getPostId":{"main":[[{"node":"getPost","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"url":"https://www.gpters.org/nocode/post/how-record-meetings-obsidian-z9w6FWh9blF9hhF","content":"## 회의 녹음하고 내가 만든 회의록 형식에 맞게 정리하기  ![1202 뉴스레터 - 1.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/1f060943-71a6-445f-9f88-c2b521adb491/81fb1356-9d94-4b4b-aa6b-a83234570119/1202_%E1%84%82%E1%85%B2%E1%84%89%E1%85%B3%E1%84%85%E1%85%A6%E1%84%90%E1%85%A5_-_1.png)  **요약:** 회의를 Whipser를 통해 텍스트로 변환하고, 변환한 텍스트를 내가 만든 회의록 형식에 맞도록 변환한 @촬스(신철승) 님의 사례입니다.  **단계별 방법:**  1. 문서를 정리할 수 있는 툴인 옵시디언에 Whisper를 설치했습니다. Whisper는 음성을 텍스트로 바꾸어주는 OpenAI의 도구입니다. 2. 옵시디언에서 회의록 양식을 만들었습니다. 옵시디언의 Smart Composer 기능(옵시디언에서 챗GPT와 같은 언어모델을 사용할 수 있는 기능)을 이용해 회의록 양식을 언어모델과 함께 구체화했습니다. 3. 옵시디언의 Smart Composer 기능에는 문서를 멘션해서 언어모델과 대화하는 기능이 있습니다. Whisper로 변환한 텍스트와 회의록 양식을 멘션하여 회의를 회의록에 양식에 맞게 정리해 달라고 부탁했습니다.  **흥미로운 점:** 내가 만든 회의록 템플릿에 맞게 녹음된 음성이 자동으로 정리되는 부분이 흥미로웠습니다. 나에게 필요한 형태로 회의록을 만들 수 있습니다.  **사례 자세히 보기 →**  https://www.gpters.org/nocode/post/how-record-meetings-obsidian-z9w6FWh9blF9hhF"}}]},"versionId":"9c649542-3305-486f-946c-aa45ee7dd038","triggerCount":0,"tags":[]}